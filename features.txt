
File copier
1. Read CSV file in current format - done
2. Extract the directories to watch - done
3. Set up file watcher from these dirs - done
4. Run in loop, copy files from source to dest - done
5. Use proper logging - done

- callback when file has been copied - done
- implement substitution of wildcards - done
- special substitution for history location - partly done, need to wire it in - trivial 
but ugly answer is to hard-code the fact that the history location is always the 2nd one in the destination list - done
- understand/implement date directories for history location - done
- test with huge file - file arrival before it has fully arrived - done
- multiple threads - done
- add negative test for callback - done
- test for file copy raising exception - done
- If file is not successfully copied then it should be reconsidered each time - done
- If history file exists then do not copy to other destinations - more accurately, do not copy a file if it has been already copied. 
File is identified by name and arrival date/time. - done
 - query what to do if same file name is received within 12 hours. Current behavior is that it would be ignored.
 - add test for persistence - done
- log start time, end time for each copy - done
- log duration - done
- log size of each copy - done
- If files are too old then do not consider them in future
- housekeep the history store
- restructure source
- setup.py
- implement as service
- deployment
- better data structure for the file copy spec
